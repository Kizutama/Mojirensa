/**
 * 项目名称：文字連鎖小游戏
 * 功能概述：这是一款用于帮助玩家记忆变体假名及对应汉字的小游戏。
 *
 * 本文件功能：card.css 定义了游戏中卡牌的样式，包括普通状态、选中状态、错误动画、飞行动画和结果牌的样式。
 */

/* 普通卡牌样式，保持长宽比为 43:58 */



:root {
    /* 定义卡牌宽度，动态在 43px 与 86px 之间变化，12vmin 为理想值 */
    --card-width: clamp(43px, 12vmin, 86px);
    --card-height: clamp(58px, 10vh, 116px);
    /* 定义卡牌间隙，最小10px，理想值5vw，最大不超过卡牌宽度的三分之一 */
    --card-gap: clamp(10px, 5vw, calc(var(--card-width) / 3));
    /* 定义 grid 内边距，使卡牌布局区域比整个 grid 小一圈，
     这里设为卡牌宽度的一半，可根据实际需求调整 */
    --grid-padding: calc(var(--card-width) / 2);
}

/* 卡牌基础样式 */
.card {
    /* 设置卡牌宽度和高度 */
    width: var(--card-width);
    height: calc(var(--card-width) * (116 / 86));
    background: #fff;
    /* 白色背景 */
    border: 1.5pt solid var(--text-color);
    /* 使用全局变量的边框颜色 */
    border-radius: 2px;
    /* 增加圆角，4px 可根据需要调整 */
    display: flex;
    /* 启用 flex 布局 */
    align-items: center;
    /* 垂直居中 */
    justify-content: center;
    /* 水平居中 */
    font-size: 24px;
    /* 字体大小 */
    font-weight: 400;
    /* 默认字体粗细 */
    cursor: pointer;
    /* 鼠标悬停显示指针 */
    transition: transform 0.2s ease, font-weight 0.2s ease;
    /* 平滑过渡动画 */
    user-select: none;
    /* 禁止文本选择 */
}
@media (min-width: 560px) and (max-width: 640px) {
    .card {
        height: var(--card-height);
        width: calc(var(--card-height) * (43 / 58));
    }
    
}

/* 被选中卡牌的样式，放大 10%，并提高 z-index 确保显示在上层 */
.card.selected {
    transform: scale(1.1);
    /* 放大 10% */
    font-weight: 800;
    /* 加粗字体 */
    z-index: 10;
    /* 提高堆叠顺序 */
    transform-origin: center center;
    /* 以中心点为放大原点 */
}


/* 牌匹配成功动效 */
/* 针对同时拥有 .card 和 .card-puff-out 类的元素应用以下动画 */
.card.card-puff-out {
    /* 启动名为 card-puff-out 的动画，持续 0.2 秒，动画结束后保持最终状态 */
    animation: card-puff-out 0.2s forwards;
}

/* 对应的 Webkit 版本 */
/* 针对支持 -webkit- 前缀的浏览器定义动画关键帧 */
@-webkit-keyframes card-puff-out {

    /* 动画开始时（0%）： */
    0% {
        opacity: 1;
        /* 透明度为 1，完全不透明 */
        transform-origin: 50% 50%;
        /* 变换原点设为元素中心 */
        transform: scale(1);
        /* 缩放比例为 1，保持原始尺寸 */
        filter: blur(0px);
        /* 无模糊效果 */
    }

    /* 动画结束时（100%）： */
    100% {
        opacity: 0;
        /* 透明度降为 0，完全透明 */
        transform-origin: 50% 50%;
        /* 变换原点仍保持中心位置 */
        transform: scale(2);
        /* 缩放比例增至 2，尺寸放大一倍 */
        filter: blur(1px);
        /* 应用 1px 模糊效果，使边缘略显模糊 */
    }
}

/* 标准关键帧定义（无前缀版本） */
@keyframes card-puff-out {

    /* 动画开始时（0%）： */
    0% {
        opacity: 1;
        /* 元素完全不透明 */
        transform-origin: 50% 50%;
        /* 变换原点在元素中心 */
        transform: scale(1);
        /* 保持原始尺寸 */
        filter: blur(0px);
        /* 无模糊效果 */
    }

    /* 动画结束时（100%）： */
    100% {
        opacity: 0;
        /* 元素完全透明 */
        transform-origin: 50% 50%;
        /* 变换原点依然是中心 */
        transform: scale(1.3);
        /* 尺寸放大 2 倍 */
        filter: blur(1px);
        /* 添加 1px 的模糊效果 */
    }
}


/* 错误动画：实现摇晃效果 */
.card.error {
    animation: shake 0.5s;
    /* 0.5 秒内完成摇晃动画 */
}

/* 摇晃动画关键帧 */
@keyframes shake {
    0% {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-5px);
    }

    50% {
        transform: translateX(5px);
    }

    75% {
        transform: translateX(-5px);
    }

    100% {
        transform: translateX(0);
    }
}

/* 飞行动画示例：实现卡牌向上飞动效果 */
.card.fly {
    transition: transform 0.5s ease;
    /* 飞行动画平滑过渡 */
    transform: translate(0, -20px);
    /* 向上移动 20px，实际效果可根据需要调整 */
}


/* 结果牌样式：分上下两个部分 */
.card.result {
    flex-direction: column;
    padding: 4px;
}

/* 上部分：占 4/5 高度，显示变态假名 */
.result-top {
    flex: 4;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: "Noto Serif Hentaigana", serif;
    font-size: 48px;
    font-weight: 600;
}



/* 下部分：占 1/5 高度，左右显示平假名和原汉字 */
.result-bottom {
    flex: 2;
    display: flex;
    align-items: center;
    font-family: "Noto Serif JP", serif;
    font-weight: 600;
    font-size: 18px;
    /* 去掉 justify-content: space-between 以便让子元素自行分配宽度 */
}

@media (max-width:640px) {
    .result-top {
        font-size: clamp(21px, 7vw, 48px)
    }
    .result-bottom{
        font-size: calc(clamp(21px, 9vw, 48px) * 0.375)
    }
}

/* 将下部分内的两个 span 各占 50% 宽度 */
.result-bottom span {
    width: 50%;
}

/* 第一个 span：右对齐，并在右侧添加内边距 */
.result-bottom span:nth-child(1) {
    text-align:justify;
    padding-right: clamp(0px, 1vmin, 48px);
    /* 根据需要调整内边距 */
}

/* 第二个 span：左对齐，并在左侧添加内边距 */
.result-bottom span:nth-child(2) {
    text-align: justifyt;
    padding-left: clamp(0px, 1vmin, 480px);
    /* 根据需要调整内边距 */
}





/* 小结果牌专用样式：继承 .card 后增加 .small-result 修饰 */
.card.small-result {
    /* 覆盖通用卡牌尺寸 */
    width: 40px;
    /* 小结果牌宽度固定为40px */
    height: 50px;
    /* 高度固定为50px */
    border: 1.5px solid var(--text-color);
    /* 边框样式可以稍微细一点 */
    /* 内部排版采用垂直排列，与 .card.result 类似 */
    flex-direction: column;
    padding: 2px;
    /* 内边距缩小 */
    /* 如果需要调整字体大小，内部子元素也在下面定义 */
    border-radius: 4px;
}

/* 小结果牌上半部分：显示变态假名 */
.card.small-result .small-result-top {
    flex: 3;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: "Noto Serif Hentaigana", serif;
    font-size: 18px;
    font-weight: 600;
    /* 较小字号 */
    line-height: 1;
}

/* 小结果牌下半部分：左右显示平假名和原汉字 */
.card.small-result .small-result-bottom {
    flex: 2;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-family: "Noto Serif JP", serif;
    font-size: 12px;
    font-weight: 500;
}

/* 小结果牌下半部分两个 span 各占50%宽度，并居中 */
.card.small-result .small-result-bottom span {
    width: 50%;
    text-align: center;
}

/* 宝牌样式：当卡牌具有 .treasure 类时，背景变为黄色 */
.card.treasure {
    background-color: #FFFCCC;
}



/* 让整个「カン」区域（含所有组）垂直排布并居中对齐 */
.kan-area {
    display: flex;
    /* 启用 flex 布局 */
    flex-direction: column;
    /* 纵向排列每个组 */
    align-items: center;
    /* 水平居中 */
    margin-top: 1rem;
    /* 你可以根据需要调节外边距 */
}

/* 单个「カン」组容器 */
.kan-group {
    display: flex;
    /* 再次使用 flex 布局 */
    flex-direction: column;
    /* 标题在上，卡牌在下 */
    align-items: center;
    /* 水平居中 */
    margin-bottom: 1rem;
    /* 每组之间留点空隙 */
}

/* 「カン」标题 */
.kan-title {
    font-weight: bold;
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
}

/* 让 4 张卡牌横向并列居中 */
.kan-cards-row {
    display: flex;
    /* 横向排列 */
    gap: 8px;
    /* 卡牌之间留点间隙 */
    justify-content: center;
    /* 水平居中对齐 */
}






/* 按钮容器（竖直排列） */
.button-group {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* 按钮样式 */
.menu-btn {
    padding: 0.7rem 3rem;
    font-size: 1rem;
    background: none;
    border: 1.2pt solid var(--text-color);
    color: var(--text-color);
    cursor: pointer;
    /* 单独设置 font-weight 0.5s 过渡，背景和颜色 0.3s 过渡 */
    transition: font-weight 0.5s ease, background 0.3s ease, color 0.3s ease;
    font-family: var(--font-family);
    font-weight: 400;
}

/* 按钮悬停时，颜色反转 */
.menu-btn:hover {
    background: var(--text-color);
    color: var(--bg-color);
    font-weight: 900;
}

/* 按钮点击时，有缩放动画 */
.menu-btn:active {
    transform: scale(0.95);
}


/* icon样式 */
.icon-button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
    width: 40px;
    background: none;
    border: 1.5pt solid var(--text-color);
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
}

/* 按钮悬停样式 */
.icon-button:hover {
    background: var(--text-color);
    color: var(--bg-color);
}

/* 按钮点击时缩小 */
.icon-button:active {
    transform: scale(0.95);
}

/* 图标 */
.icon-icon {
    width: 24px;
    height: 24px;
}